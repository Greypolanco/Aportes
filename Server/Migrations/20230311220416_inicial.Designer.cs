// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aportes.Server.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230311220416_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Aporte", b =>
                {
                    b.Property<int>("AporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<float>("Monto")
                        .HasColumnType("REAL");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AporteId");

                    b.ToTable("Aporte");

                    b.HasData(
                        new
                        {
                            AporteId = 1,
                            Concepto = "Pintura banco",
                            Fecha = new DateTime(2023, 3, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Monto = 200f,
                            PersonaId = 1
                        },
                        new
                        {
                            AporteId = 2,
                            Concepto = "Reparacion Techo",
                            Fecha = new DateTime(2023, 3, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Monto = 500f,
                            PersonaId = 2
                        });
                });

            modelBuilder.Entity("AporteDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AporteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoAporteId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AporteId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoAporteId");

                    b.ToTable("AporteDetalle");
                });

            modelBuilder.Entity("Personas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "Nay"
                        },
                        new
                        {
                            Id = 2,
                            name = "Jasson"
                        });
                });

            modelBuilder.Entity("TiposAportes", b =>
                {
                    b.Property<int>("TipoAporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Logrado")
                        .HasColumnType("REAL");

                    b.Property<float>("Meta")
                        .HasColumnType("REAL");

                    b.HasKey("TipoAporteId");

                    b.ToTable("TiposAportes");

                    b.HasData(
                        new
                        {
                            TipoAporteId = 1,
                            Descripcion = "Pintura Banco",
                            Logrado = 5000f,
                            Meta = 10000f
                        },
                        new
                        {
                            TipoAporteId = 2,
                            Descripcion = "Reparacion Techo",
                            Logrado = 10000f,
                            Meta = 50000f
                        });
                });

            modelBuilder.Entity("AporteDetalle", b =>
                {
                    b.HasOne("Aporte", null)
                        .WithMany("DetalleAporte")
                        .HasForeignKey("AporteId");

                    b.HasOne("Personas", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiposAportes", "TiposAporte")
                        .WithMany()
                        .HasForeignKey("TipoAporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TiposAporte");
                });

            modelBuilder.Entity("Aporte", b =>
                {
                    b.Navigation("DetalleAporte");
                });
#pragma warning restore 612, 618
        }
    }
}
